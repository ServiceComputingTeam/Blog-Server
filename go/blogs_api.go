/*
 * Blog for service computing
 *
 *
 *
 * API version: 1.0.0
 * Contact: 895118352@qq.com
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

import (
	"encoding/json"
	"fmt"
	"io/ioutil"
	"net/http"

	"github.com/gorilla/mux"
)

func GetALLBlog(w http.ResponseWriter, r *http.Request) {
	offset := r.URL.Query().Get("offset")
	pages := r.URL.Query().Get("pages")
	fmt.Println(offset, pages)
	// TODO get all blogs
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	w.WriteHeader(http.StatusOK)
}

func GetBlogByTitle(w http.ResponseWriter, r *http.Request) {
	data := mux.Vars(r)
	username := data["username"]
	title := data["title"]
	fmt.Println(username, title)
	// TODO get blog by title
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	w.WriteHeader(http.StatusOK)
}

func GetReviewByBlog(w http.ResponseWriter, r *http.Request) {
	data := mux.Vars(r)
	username := data["username"]
	title := data["title"]
	fmt.Println(username, title)
	// TODO query reviews by blog title (and username ?)
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	w.WriteHeader(http.StatusOK)
}

func AddReview(w http.ResponseWriter, r *http.Request) {
	username := r.Header.Get("username")
	if username == "" {
		w.WriteHeader(http.StatusUnauthorized)
		return
	}
	re, _ := ioutil.ReadAll(r.Body)
	var review Review
	err := json.Unmarshal(re, &review)
	fmt.Println(err, review)
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	w.WriteHeader(http.StatusOK)
}
